let e,t;await window.interpretate.shared.Marked.load(),e=window.interpretate.shared.Marked.default,await window.interpretate.shared.katex.load(),t=window.interpretate.shared.katex.default;const r={transaction:(e,t,r,n)=>{if(console.log(t.dom.ocellref),t.dom.ocellref){const e=t.dom.ocellref.origin.channel;server._emitt(e,`<|"Channel"->"${r}", "Length"->${n}, "CellType"->"md"|>`,'Forwarded["CM:PasteEvent"]')}},file:(e,t,r,n,a)=>{console.log(t.dom.ocellref),t.dom.ocellref&&server.emitt(r,`<|"Data"->"${a}", "Name"->"${n}"|>`,"File")}},n={transaction:(e,t,r,n)=>{if(console.log(t.dom.ocellref),t.dom.ocellref){const e=t.dom.ocellref.origin.channel;server._emitt(e,`<|"Channel"->"${r}", "Length"->${n}, "CellType"->"md"|>`,'Forwarded["CM:DropEvent"]')}},file:(e,t,r,n,a)=>{console.log(t.dom.ocellref),t.dom.ocellref&&server.emitt(r,`<|"Data"->"${a}", "Name"->"${n}"|>`,"File")}};function a(e){return{name:"frontendObject",level:"inline",start:e=>e.indexOf("FrontEndExecutable["),tokenizer(e,t){const r=e.match(/^FrontEndExecutable\[+([^\[\n]+?)\]+/);if(r)return{type:"frontendObject",raw:r[0],text:r[1].trim()}},renderer(t,r){console.warn("frontendObject");const n={uid:t.text,elementId:"femarkdown-"+uuidv4()};return e.buffer.push(n),console.warn(this),`<div class="markdown-feobject" id="${n.elementId}"></div>`}}}const o={throwOnError:!1};let i,l,c;const d=window.SupportedCells.codemirror.context;const s=new d.MatchDecorator({regexp:/!!\[.*\]/g,maxLength:1/0,decoration:(e,t,r)=>d.Decoration.replace({widget:new p(e[0],t,r)})}),w=d.ViewPlugin.fromClass(class{constructor(e){this.excalidrawHolder=s.createDeco(e)}update(e){this.excalidrawHolder=s.updateDeco(e,this.excalidrawHolder)}},{decorations:e=>e.excalidrawHolder,provide:e=>d.EditorView.atomicRanges.of((t=>t.plugin(e)?.excalidrawHolder||d.Decoration.none))});class p extends d.WidgetType{constructor(e,t,r){super(),this.match=e,this.pos=r,this.view=t}eq(e){return!1}updateDOM(e){return e.ExcalidrawWidget=this,!0}updateContent(e){const t=this,r=e,n={from:t.pos+2,to:t.pos+t.match.length,insert:r};this.view.dispatch({changes:n})}toDOM(e){const t=this.match;let r=document.createElement("div");r.ExcalidrawWidget=this;const n=async(t,r)=>{if(!i){if(!window.interpretate.shared.Excalidraw)return void(t.innerHTML='<span style="color:red">No shared library ExcalidrawLib found</span>');await window.interpretate.shared.Excalidraw.load(),i=window.interpretate.shared.Excalidraw.Excalidraw.default}if(!l){if(!window.interpretate.shared.React)return void(t.innerHTML='<span style="color:red">No shared library React found</span>');await window.interpretate.shared.React.load(),l=window.interpretate.shared.React.React.default,c=window.interpretate.shared.React.ReactDOM.default}const n=t,a=c.createRoot(n);t.reactRoot=a,console.log("React Render!");const o=t;let s="";const w=function(e,t){let r,n,a=!1;return function o(){if(a)return r=arguments,void(n=this);e.apply(this,arguments),a=!0,setTimeout((function(){a=!1,r&&(o.apply(n,r),r=n=null)}),t)}}(((e,t)=>{if(!o.ExcalidrawWidget)return;const r=JSON.stringify(e);r!=s&&(s=r,console.log("save"),o.ExcalidrawWidget.updateContent(r))}),700);let p;try{p=JSON.parse(r.slice(2))}catch(e){return void(o.innerHTML='<span style="color:red; padding: 0.5rem;">Error while parsing expression</span>')}console.log("Mount!"),o.addEventListener("keypress",(t=>{if(t.shiftKey&&"Enter"==t.key){console.log(t);const r=e.state.facet(d.originFacet)[0].origin;console.log("EVAL"),r.eval(e.state.doc.toString()),debounce=!0}})),a.render(l.createElement(((e,t)=>()=>{l.useState("");const[r,n]=l.useState(null);return l.createElement(l.Fragment,null,l.createElement("div",{style:{height:"500px"}},l.createElement(i.Excalidraw,{UIOptions:{canvasActions:{loadScene:!0,saveToActiveFile:!0,help:!1,toggleTheme:!1,changeViewBackgroundColor:!1},saveToActiveFile:!0,toggleTheme:!1},initialData:{elements:e,appState:{viewBackgroundColor:"transparent",zenModeEnabled:!0}},onChange:t,excalidrawAPI:e=>n(e)})))})(p,w)))},a=e.state.facet(d.originFacet)[0].origin;let o=!1;return a.props.Hidden||(n(r,t),o=!0),a.addEventListener("property",(e=>{"Hidden"==e.key&&(e.value?o&&(r.reactRoot.unmount(),console.warn("Unmount react"),o=!1):o||(n(r,r.ExcalidrawWidget.match),o=!0))})),r}ignoreEvent(e){return!0}destroy(e){console.log("Excalidraw widget was destroyed"),e.reactRoot&&(e.reactRoot.unmount(),e.ExcalidrawWidget=void 0)}}window.SupportedLanguages.push({check:e=>null!=e[0].match(/\w*\.(md)$/),plugins:[d.markdown(),d.DropPasteHandlers(n,r),w],name:d.markdownLanguage.name}),window.SupportedCells.markdown={view:class{origin={};feObjects=[];envs=[];dispose(){console.warn("Markdown cell dispose...");for(const e of this.envs)for(const t of Object.values(e.global.stack))console.log("dispose"),t.dispose()}constructor(r,n){console.log("marked data:::"),console.log(n);const i=this;var l,c;return new e({async:!0,extensions:[(l=o,{name:"inlineKatex",level:"inline",start:e=>e.indexOf("$"),tokenizer(e,t){const r=e.match(/^\$+([^$\n]+?)\$+/);if(r)return{type:"inlineKatex",raw:r[0],text:r[1].trim()}},renderer:e=>(console.warn("inlineKatex"),t.renderToString(e.text.replaceAll("\\\\","\\"),l))}),{name:"mark",level:"inline",start:e=>e.indexOf("=="),tokenizer(e,t){const r=e.match(/^==+([^=\n]+?)==+/);if(r)return{type:"mark",raw:r[0],text:r[1].trim()}},renderer:e=>(console.warn("mark"),"<mark>"+e.text+"</mark>")},{name:"blockKatex",level:"block",start:e=>e.indexOf("\n$$"),tokenizer(e,t){const r=e.match(/^\$\$\n([^$]+?)\n\$\$/);if(r)return{type:"blockKatex",raw:r[0],text:r[1].trim()}},renderer:e=>(console.warn("blockKatex"),`<p style="padding-top: 1em; padding-bottom: 1em;">${t.renderToString(e.text.replaceAll("\\\\","\\"),{displayMode:!0})}</p>`)},a({buffer:i.feObjects})]}).parse((c=n,c.replace(/\\:[\da-f]{4}/gi,(function(e){return String.fromCharCode(parseInt(e.replace(/\\:/g,""),16))})))).then((e=>{r.element.innerHTML=e,i.feObjects.forEach((async e=>{var t={call:Date.now()+Math.floor(10009*Math.random())};console.warn("loading executable on a markdown field..."),console.log(e.uid);let r,n={global:t,element:document.getElementById(e.elementId)};console.log("Marked: creating an object"),console.log("forntend executable"),console.log("check cache"),r=ObjectHashMap[e.uid]?ObjectHashMap[e.uid]:new ObjectStorage(e.uid),console.log(r);const a=n,o=await r.get(),l=new ExecutableObject("marked-stored-"+uuidv4(),a,o);l.assignScope(a),r.assign(l),l.execute(),i.envs.push(n)}))})),r.element.classList.add("markdown","margin-bottom-fix"),this}}};var u=async e=>{if(!i){if(!window.interpretate.shared.ExcalidrawLib)return'<span style="color:red">No sharedlib Excalidraw found!</span>';await window.interpretate.shared.Excalidraw.load(),i=window.interpretate.shared.Excalidraw.Excalidraw.default}let t;try{t=JSON.parse(e)}catch(e){return`<span style="color:red">${e}</span>`}const r=await i.exportToSvg({elements:t,appState:{exportBackground:!1},exportWithDarkMode:!1});r.removeAttribute("width"),r.removeAttribute("height");const n=r.outerHTML;return r.remove(),n};core["Internal`EXJSEvaluator"]=async(e,t)=>{let r=await interpretate(e[0],t);Array.isArray(r)||(r=[r]);const n=[];for(const e of r){const t=await u(e);n.push(t)}return n};
