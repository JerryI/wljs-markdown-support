let e;await window.interpretate.shared.marked.load(),e=window.interpretate.shared.marked.default;const n=new e.Renderer,r=n.link;let o;n.link=(e,o,t)=>{const l=e.startsWith(`${location.protocol}//${location.hostname}`),a=r.call(n,e,o,t);return l?a:a.replace(/^<a /,'<a target="_blank" rel="noreferrer noopener nofollow" ')},await window.interpretate.shared.katex.load(),o=window.interpretate.shared.katex.default;const t={transaction:(e,n,r,o)=>{if(console.log(n.dom.ocellref),n.dom.ocellref){const e=n.dom.ocellref.origin.channel;server._emitt(e,`<|"Channel"->"${r}", "Length"->${o}, "CellType"->"md"|>`,'Forwarded["CM:PasteEvent"]')}},file:(e,n,r,o,t)=>{console.log(n.dom.ocellref),n.dom.ocellref&&server.emitt(r,`<|"Data"->"${t}", "Name"->"${o}"|>`,"File")}},l={transaction:(e,n,r,o)=>{if(console.log(n.dom.ocellref),n.dom.ocellref){const e=n.dom.ocellref.origin.channel;server._emitt(e,`<|"Channel"->"${r}", "Length"->${o}, "CellType"->"md"|>`,'Forwarded["CM:DropEvent"]')}},file:(e,n,r,o,t)=>{console.log(n.dom.ocellref),n.dom.ocellref&&server.emitt(r,`<|"Data"->"${t}", "Name"->"${o}"|>`,"File")}};const a={throwOnError:!1};var i;e.use({extensions:[(i=a,{name:"inlineKatex",level:"inline",start:e=>e.indexOf("$"),tokenizer(e,n){const r=e.match(/^\$+([^$\n]+?)\$+/);if(r)return{type:"inlineKatex",raw:r[0],text:r[1].trim()}},renderer:e=>(console.warn("inlineKatex"),o.renderToString(e.text.replaceAll("\\\\","\\"),i))}),function(e){return{name:"blockKatex",level:"block",start:e=>e.indexOf("\n$$"),tokenizer(e,n){const r=e.match(/^\$\$\n([^$]+?)\n\$\$/);if(r)return{type:"blockKatex",raw:r[0],text:r[1].trim()}},renderer:n=>(console.warn("blockKatex"),`<p style="padding-top: 1em; padding-bottom: 1em;">${o.renderToString(n.text.replaceAll("\\\\","\\"),e)}</p>`)}}(a)],renderer:n});window.SupportedLanguages.push({check:e=>null!=e[0].match(/\w*\.(md)$/),plugins:[window.markdown(),window.DropPasteHandlers(l,t)],name:window.markdownLanguage.name}),window.SupportedCells.markdown={view:class{origin={};dispose(){}constructor(n,r){return console.log("marked data:::"),console.log(r),n.element.innerHTML=e.parse(r.replace(/\\:[\da-f]{4}/gi,(function(e){return String.fromCharCode(parseInt(e.replace(/\\:/g,""),16))}))),n.element.classList.add("markdown","margin-bottom-fix"),this}}};
